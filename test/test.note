<?xml version="1.0" encoding="utf-8"?>

<note xmlns="http://note.youdao.com" file-version="0" schema-version="1.0.3">
  <head>
    <list id="5660-1513940416285" type="unordered"/>
    <catalogue-wrap compat="true" id="3760-1513750704190"/>
  </head>
  <body>
    <heading compat="true">
      <coId>7026-1513750704189</coId>
      <text>4. 面向对象</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>32</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>7578-1514082261326</coId>
      <text>1. 面向对象思想</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>5629-1513750588579</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5726-1514082261326</coId>
      <text>1.1 面向过程</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>4093-1513750629168</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>9076-1514082261326</coId>
      <text>1.2 面向对象</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>4491-1513750650649</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5118-1514082261327</coId>
      <text>2. 类与对象及其使用</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>7171-1513750663880</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>3572-1514082261327</coId>
      <text>3. 成员变量和局部变量的区别</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>9744-1513750593401</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>3965-1514082261327</coId>
      <text>4. 对象的内存图</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>6012-1513941296188</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>1425-1514082261327</coId>
      <text>4.1 对象和方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>2920-1513822992776</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>6386-1514082261327</coId>
      <text>4.2 形式参数问题</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>6077-1513822972415</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>2170-1514082261327</coId>
      <text>5. 匿名对象</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>5924-1513750593401</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>4888-1514082261327</coId>
      <text>5.1 概念</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>1154-1513823967854</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>4340-1514082261327</coId>
      <text>5.2 匿名对象的两种使用情况</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>9373-1513823830306</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>2339-1514082261327</coId>
      <text>5.3 好处</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8146-1513941792139</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>4956-1514082261327</coId>
      <text>6. 封装(private)</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>9510-1513750593401</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>7036-1514082261327</coId>
      <text>6.1 概述</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>7977-1513825098085</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>9215-1514082261327</coId>
      <text>6.2 private关键字</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>7538-1513825796181</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>1613-1514082261327</coId>
      <text>7. this关键字</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>5366-1513750593401</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>4771-1514082261327</coId>
      <text>8. 构造方法</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>6997-1513750593401</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5021-1514082261327</coId>
      <text>8.1 构造方法作用概述</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>4780-1513840885006</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>2163-1514082261327</coId>
      <text>8.2 类的成员方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>3086-1513846283091</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>7831-1514082261328</coId>
      <text>8.3 标准类</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8169-1513846344764</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5987-1514082261328</coId>
      <text>9.类的初始化过程</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>8418-1513846740421</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>6022-1514082261329</coId>
      <text>10. static关键字（静态）</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>6075-1514082141649</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>1642-1514082261329</coId>
      <text>10.1 概念</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>7123-1514081694053</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>7490-1514082261331</coId>
      <text>10.2 static关键字特点</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>6768-1513909724078</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>8086-1514082261331</coId>
      <text>10.3 static关键字注意事项</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>1662-1513910686080</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>7813-1514082261331</coId>
      <text>10.6 main方法解读</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8710-1513912953370</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>1236-1514082261331</coId>
      <text>11.1 制作帮助文档</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8175-1513921698522</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>9250-1514082261331</coId>
      <text>11.2 如何使用帮助文档</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>9855-1513940497181</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>3634-1514082261331</coId>
      <text>11.3 根据文档编辑一个Math.random</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8418-1513940544609</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5079-1514082261332</coId>
      <text>12 代码块</text>
      <inline-styles/>
      <styles/>
      <href>
        <value>1559-1513927509784</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>5480-1514082261333</coId>
      <text>12.1 局部代码块</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>3169-1513927526159</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>6830-1514082261333</coId>
      <text>12.2 构造代码块</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>8034-1513912614147</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>3072-1514082261334</coId>
      <text>12.3 静态代码块</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>5077-1513928146941</value>
      </href>
    </catalogue>
    <catalogue catalogue-id="3760-1513750704190" compat="true">
      <coId>3841-1514082261334</coId>
      <text>12.4 类执行顺序</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
      <href>
        <value>1457-1513928151940</value>
      </href>
    </catalogue>
    <heading compat="true" level="1">
      <coId>5629-1513750588579</coId>
      <text>1. 面向对象思想</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>9</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>9</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>3572-1513750727081</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>4093-1513750629168</coId>
      <text>1.1 面向过程</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>8</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5674-1513750595073</coId>
      <text>我们来回想一下，这几天我们完成一个需求的步骤：首先是搞清楚我们要做什么，然后在分析怎么做，最后我们再代码体现。也就是一步一步去实现，而具体的每一步都需要我们去实现和操作。这些步骤相互调用和协作，完成我们的需求。</text>
      <inline-styles>
        <color>
          <from>23</from>
          <to>55</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>8664-1513750611148</coId>
      <text>在上面的每一个具体步骤中我们都是参与者，并且需要面对具体的每一个步骤和过程，这就是面向过程最直接的体现。</text>
      <inline-styles>
        <color>
          <from>16</from>
          <to>19</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1765-1513750611148</coId>
      <text>那么什么是面向过程开发呢?面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。</text>
      <inline-styles>
        <color>
          <from>36</from>
          <to>38</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7178-1513750611148</coId>
      <text>面向过程的代表语言：C语言</text>
      <inline-styles>
        <bold>
          <from>10</from>
          <to>13</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1168-1513750645707</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>4491-1513750650649</coId>
      <text>1.2 面向对象</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>8</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5540-1513750655922</coId>
      <text>当需求比较简单时，我们一步一步去操作没问题，并且效率也挺高。可随着需求的更改，功能的增多，发现需要面对每一个步骤很麻烦了，这时就开始思索，能不能把这些步骤和功能在进行封装，封装时根据不同的功能，进行不同的封装，功能类似的封装在一起。这样结构就清晰了很多。用的时候，找到对应的类就可以了。这就是面向对象的思想。接下来我们看看面向对象到底是什么?</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7511-1513750663880</coId>
      <text>面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为。 </text>
      <inline-styles>
        <bold>
          <from>5</from>
          <to>63</to>
          <value>true</value>
        </bold>
        <color>
          <from>5</from>
          <to>63</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9820-1513750663880</coId>
      <text>使用面向对象思想解决问题的时候，只需要以一个指挥者的身份，去调用不同的对象的行为去完成事情即可。</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>8982-1513750750148</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4099-1513750750632</coId>
      <text>概述</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>2</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>7383-1513750754841</coId>
      <text>面向对象编程，即OOP，是一种编程范式</text>
      <inline-styles>
        <color>
          <from>8</from>
          <to>11</to>
          <value>#df402a</value>
        </color>
        <back-color>
          <from>8</from>
          <to>11</to>
          <value>#FAE220</value>
        </back-color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1111-1513750754841</coId>
      <text>面向对象是基于面向过程的编程思想</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5315-1513750754841</coId>
      <text>面向对象是基于万物皆对象这个哲学观点的</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4840-1513750778439</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6449-1513750754841</coId>
      <text>特点</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>2</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>2220-1513750754841</coId>
      <text>是一种更符合我们思想习惯的思想</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1980-1513750754841</coId>
      <text>可以将复杂的事情简单化</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6930-1513750754841</coId>
      <text>将我们从执行者变成了指挥者</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6560-1513750754841</coId>
      <text>角色发生了转换</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>2243-1513750754841</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6485-1513750755893</coId>
      <text>使用规则</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1756-1513750756062</coId>
      <text>在用面向对象思想体现的时候，给出一个三句话使用规则，让我们更符合面向对象思想</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2198-1513751331470</coId>
      <text>A:首先分析有那些对象（类）</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8029-1513751331470</coId>
      <text>B:接着分析每个对象（类）应该有什么</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2140-1513751331470</coId>
      <text>C:最后分析对象（类）与对象（类）的关系</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1218-1513751369700</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5637-1513751331470</coId>
      <text>开发&amp;设计&amp;特征</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9890-1513751384680</coId>
      <text>面向对象开发</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1390-1513751372260</coId>
      <text>就是不断的创建对象，使用对象，指挥对象做事情。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5251-1513751372260</coId>
      <text>面向对象设计</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5046-1513751372260</coId>
      <text>其实就是在分析、管理和维护对象之间的关系。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>3319-1513751372260</coId>
      <text>面向对象特征</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9095-1513751372260</coId>
      <text>封装(encapsulation)</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>1320-1513751372260</coId>
      <text>继承(inheritance)</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>7288-1513751372260</coId>
      <text>多态(polymorphism)</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <image>
      <coId>6245-1517136958808</coId>
      <source>https://note.youdao.com/yws/res/83765/CDC0C39E839042F5AE3085FEB82D8535</source>
      <text/>
      <styles>
        <align>center</align>
        <width>365</width>
        <height>276</height>
      </styles>
    </image>
    <para>
      <coId>4076-1513750756206</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7320-1517136983768</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>7171-1513750663880</coId>
      <text>2. 类与对象及其使用</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>11</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>11</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>2340-1513755332165</coId>
      <text>类只能被public protected defult 3种修饰，不能被private修饰</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6746-1513755386155</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3824-1513755338413</coId>
      <text>类与对象关系</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>8164-1513755334457</coId>
      <text>我们学习编程语言，就是为了模拟现实世界的事物，实现信息化。比如：去超市买东西的计费系统，去银行办业务的系统。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2810-1513755364660</coId>
      <text>我们如何表示一个现实世界事物呢：</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7752-1513755364660</coId>
      <text>属性 就是该事物的描述信息</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>7872-1513755364661</coId>
      <text>行为 就是该事物能够做什么</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>1266-1513755364661</coId>
      <text>举例：学生事物</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>1668-1513755364661</coId>
      <text>我们如何使用Java语言来映射现实世界事务呢？</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6238-1513755364661</coId>
      <text>我们学习的Java语言最基本单位是类，所以，我们就应该把事物用一个类来体现。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2032-1513755364661</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9316-1513755418228</coId>
      <text>类与对象关系</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1221-1513755398534</coId>
      <text>类</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1950-1513755401612</coId>
      <text>是一组相关的属性和行为的集合，是一种抽象概念</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2971-1513755401612</coId>
      <text>对象</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1520-1513755401612</coId>
      <text>是该类事物的具体体现</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7994-1513755401612</coId>
      <text>类和对象的关系</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1356-1513755401612</coId>
      <text>类的具体表现或者实例就是对象</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>4766-1513755401612</coId>
      <text>对象的抽象或者总概括就是类。</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>7382-1513755401612</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <image>
      <coId>5717-1513755830445</coId>
      <source>https://note.youdao.com/yws/res/83759/41FCDC6BFDD74E66B0844A5DB6C4B6B7</source>
      <text/>
      <styles>
        <align>center</align>
        <width>422</width>
        <height>145</height>
      </styles>
    </image>
    <para>
      <coId>4636-1513755332346</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9081-1513750593401</coId>
      <text>现实世界的事物</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6627-1513755844432</coId>
      <text>属性 人的身高，体重等</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9249-1513755844432</coId>
      <text>行为 人可以学习，吃饭等</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5336-1513755844432</coId>
      <text>Java中用class描述事物也是如此</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6136-1513755844432</coId>
      <text>成员变量 就是事物的属性</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2929-1513755844432</coId>
      <text>成员方法 就是事物的行为</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3626-1513755844432</coId>
      <text>定义类其实就是定义类的成员(成员变量和成员方法)</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9750-1513755844432</coId>
      <text>成员变量：和以前定义变量是一样的，只不过位置发生了改变。在类中方法外。</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>35</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2782-1513755844432</coId>
      <text>成员方法：和以前定义方法是一样的，只不过把static去掉，后面在详细讲解static的作用。</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>47</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8789-1513755844432</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>9744-1513750593401</coId>
      <text>3. 成员变量和局部变量的区别</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>15</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>15</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>8513-1513755868770</coId>
      <text>在类中的位置不同</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7662-1513755875824</coId>
      <text>成员变量： 类中方法外</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7310-1513755875824</coId>
      <text>局部变量： 方法内或者方法声明上</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5134-1513755875824</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7343-1513755892503</coId>
      <text>在内存中的位置不同</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4781-1513755875824</coId>
      <text>成员变量 堆内存</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
        <color>
          <from>5</from>
          <to>8</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7420-1513755875824</coId>
      <text>局部变量 栈内存</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
        <color>
          <from>5</from>
          <to>8</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8899-1513755875824</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3241-1513755891509</coId>
      <text>生命周期不同</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7359-1513755875824</coId>
      <text>成员变量 随着对象的存在而存在，随着对象的消失而消失</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4425-1513755875824</coId>
      <text>局部变量 随着方法的调用而存在，随着方法的调用完毕而消失</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5871-1513755875824</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3333-1513755890018</coId>
      <text>初始化值不同</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9695-1513755875824</coId>
      <text>成员变量 有默认的初始化值</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2258-1513755875824</coId>
      <text>局部变量 没有默认的初始化值，必须先定义，赋值，才能使用。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5422-1513755875824</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7216-1513821657740</coId>
      <text>注意</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>2</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>6275-1513821661107</coId>
      <text>成员变量和局部变量可以重名，但是以局部变量优先。首先遵循的是代码的执行顺序</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>37</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5944-1513822525793</coId>
      <text>（局部变量在栈上！成员变量在堆上，先找栈上的。）</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>24</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <code>
      <coId>9020-1542286383911</coId>
      <text>public class Student {     // 成员变量     int age;     public void method() {         // 给成员变量重新赋值         age = 30;         // 局部变量         int age = 20;         System.out.println(this.age);         System.out.println(age);     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <bold>
          <from>7</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <bold>
          <from>39</from>
          <to>42</to>
          <value>true</value>
        </bold>
        <bold>
          <from>52</from>
          <to>58</to>
          <value>true</value>
        </bold>
        <bold>
          <from>59</from>
          <to>63</to>
          <value>true</value>
        </bold>
        <bold>
          <from>138</from>
          <to>141</to>
          <value>true</value>
        </bold>
        <bold>
          <from>167</from>
          <to>170</to>
          <value>true</value>
        </bold>
        <bold>
          <from>179</from>
          <to>183</to>
          <value>true</value>
        </bold>
        <bold>
          <from>205</from>
          <to>208</to>
          <value>true</value>
        </bold>
        <italic>
          <from>167</from>
          <to>170</to>
          <value>true</value>
        </italic>
        <italic>
          <from>205</from>
          <to>208</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>22</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>23</from>
          <to>34</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>35</from>
          <to>47</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>48</from>
          <to>74</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>75</from>
          <to>95</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>96</from>
          <to>113</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>114</from>
          <to>129</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>130</from>
          <to>151</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>152</from>
          <to>189</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>190</from>
          <to>222</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>223</from>
          <to>228</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>229</from>
          <to>230</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>6</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>6</from>
          <to>7</to>
          <value>#393939</value>
        </color>
        <color>
          <from>7</from>
          <to>12</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>12</from>
          <to>22</to>
          <value>#393939</value>
        </color>
        <color>
          <from>23</from>
          <to>27</to>
          <value>#393939</value>
        </color>
        <color>
          <from>27</from>
          <to>34</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>35</from>
          <to>39</to>
          <value>#393939</value>
        </color>
        <color>
          <from>39</from>
          <to>42</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>42</from>
          <to>43</to>
          <value>#393939</value>
        </color>
        <color>
          <from>43</from>
          <to>46</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>46</from>
          <to>47</to>
          <value>#393939</value>
        </color>
        <color>
          <from>48</from>
          <to>52</to>
          <value>#393939</value>
        </color>
        <color>
          <from>52</from>
          <to>58</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>58</from>
          <to>59</to>
          <value>#393939</value>
        </color>
        <color>
          <from>59</from>
          <to>63</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>63</from>
          <to>74</to>
          <value>#393939</value>
        </color>
        <color>
          <from>75</from>
          <to>83</to>
          <value>#393939</value>
        </color>
        <color>
          <from>83</from>
          <to>95</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>96</from>
          <to>104</to>
          <value>#393939</value>
        </color>
        <color>
          <from>104</from>
          <to>107</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>107</from>
          <to>113</to>
          <value>#393939</value>
        </color>
        <color>
          <from>114</from>
          <to>122</to>
          <value>#393939</value>
        </color>
        <color>
          <from>122</from>
          <to>129</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>130</from>
          <to>138</to>
          <value>#393939</value>
        </color>
        <color>
          <from>138</from>
          <to>141</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>141</from>
          <to>142</to>
          <value>#393939</value>
        </color>
        <color>
          <from>142</from>
          <to>145</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>145</from>
          <to>151</to>
          <value>#393939</value>
        </color>
        <color>
          <from>152</from>
          <to>167</to>
          <value>#393939</value>
        </color>
        <color>
          <from>167</from>
          <to>170</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>170</from>
          <to>179</to>
          <value>#393939</value>
        </color>
        <color>
          <from>179</from>
          <to>183</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>183</from>
          <to>184</to>
          <value>#393939</value>
        </color>
        <color>
          <from>184</from>
          <to>187</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>187</from>
          <to>189</to>
          <value>#393939</value>
        </color>
        <color>
          <from>190</from>
          <to>205</to>
          <value>#393939</value>
        </color>
        <color>
          <from>205</from>
          <to>208</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>208</from>
          <to>217</to>
          <value>#393939</value>
        </color>
        <color>
          <from>217</from>
          <to>220</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>220</from>
          <to>222</to>
          <value>#393939</value>
        </color>
        <color>
          <from>223</from>
          <to>228</to>
          <value>#393939</value>
        </color>
        <color>
          <from>229</from>
          <to>230</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>3799-1542286388091</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>6012-1513941296188</coId>
      <text>4. 对象的内存图</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>9</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>9</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>1863-1513823011912</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>2920-1513822992776</coId>
      <text>4.1 对象和方法</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>9</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>9</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5731-1513941698639</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7562-1513757545240</coId>
      <text>成员的对象的值每个都是一份，</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>14</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>14</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3176-1513761469905</coId>
      <text>但是同一类的对象，用的方法都是同一个！！</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>20</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>20</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9324-1513761501723</coId>
      <text>方法执行完，方法栈中的值都销毁了，但是方法区中的方法不销毁，因为是大家共用的。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>39</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>39</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>4923-1542286393840</coId>
      <text>public class PhoneDome {     public static void main(String[] args) {         Phone p = new Phone();         System.out.println(p); //地址值         System.out.println(p.setBrand);//地址值      } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <bold>
          <from>7</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <bold>
          <from>29</from>
          <to>35</to>
          <value>true</value>
        </bold>
        <bold>
          <from>36</from>
          <to>42</to>
          <value>true</value>
        </bold>
        <bold>
          <from>43</from>
          <to>47</to>
          <value>true</value>
        </bold>
        <bold>
          <from>88</from>
          <to>91</to>
          <value>true</value>
        </bold>
        <bold>
          <from>116</from>
          <to>119</to>
          <value>true</value>
        </bold>
        <bold>
          <from>153</from>
          <to>156</to>
          <value>true</value>
        </bold>
        <italic>
          <from>116</from>
          <to>119</to>
          <value>true</value>
        </italic>
        <italic>
          <from>153</from>
          <to>156</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>24</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>25</from>
          <to>69</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>70</from>
          <to>100</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>101</from>
          <to>137</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>138</from>
          <to>182</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>183</from>
          <to>189</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>190</from>
          <to>191</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>6</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>6</from>
          <to>7</to>
          <value>#393939</value>
        </color>
        <color>
          <from>7</from>
          <to>12</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>12</from>
          <to>24</to>
          <value>#393939</value>
        </color>
        <color>
          <from>25</from>
          <to>29</to>
          <value>#393939</value>
        </color>
        <color>
          <from>29</from>
          <to>35</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>35</from>
          <to>36</to>
          <value>#393939</value>
        </color>
        <color>
          <from>36</from>
          <to>42</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>42</from>
          <to>43</to>
          <value>#393939</value>
        </color>
        <color>
          <from>43</from>
          <to>47</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>47</from>
          <to>62</to>
          <value>#393939</value>
        </color>
        <color>
          <from>62</from>
          <to>66</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>66</from>
          <to>69</to>
          <value>#393939</value>
        </color>
        <color>
          <from>70</from>
          <to>84</to>
          <value>#393939</value>
        </color>
        <color>
          <from>84</from>
          <to>85</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>85</from>
          <to>88</to>
          <value>#393939</value>
        </color>
        <color>
          <from>88</from>
          <to>91</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>91</from>
          <to>100</to>
          <value>#393939</value>
        </color>
        <color>
          <from>101</from>
          <to>116</to>
          <value>#393939</value>
        </color>
        <color>
          <from>116</from>
          <to>119</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>119</from>
          <to>128</to>
          <value>#393939</value>
        </color>
        <color>
          <from>128</from>
          <to>129</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>129</from>
          <to>132</to>
          <value>#393939</value>
        </color>
        <color>
          <from>132</from>
          <to>137</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>138</from>
          <to>153</to>
          <value>#393939</value>
        </color>
        <color>
          <from>153</from>
          <to>156</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>156</from>
          <to>165</to>
          <value>#393939</value>
        </color>
        <color>
          <from>165</from>
          <to>166</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>166</from>
          <to>177</to>
          <value>#393939</value>
        </color>
        <color>
          <from>177</from>
          <to>182</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>183</from>
          <to>189</to>
          <value>#393939</value>
        </color>
        <color>
          <from>190</from>
          <to>191</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>6686-1542286397922</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>5052-1513941700599</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>6077-1513822972415</coId>
      <text>4.2 形式参数问题</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>3522-1513823022847</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9470-1513761526124</coId>
      <text>基本类型作为形式参数</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3382-1513822951267</coId>
      <text>传递的是值</text>
      <inline-styles>
        <color>
          <from>4</from>
          <to>5</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7634-1513822951267</coId>
      <text>引用类型作为形式参数</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>2218-1513822951267</coId>
      <text>传递的是堆内存的地址</text>
      <inline-styles>
        <color>
          <from>4</from>
          <to>10</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8516-1513822951267</coId>
      <text>如果想传递堆内存的地址，只有new的东西，在堆里面才分配空间，也就是说使用引用类型作为形式参数的话，需要传递类的对象。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1464-1513822951267</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>5924-1513750593401</coId>
      <text>5. 匿名对象</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>4477-1513824851272</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>1154-1513823967854</coId>
      <text>5.1 概念</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>6</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>1322-1513823819048</coId>
      <text>匿名对象：就是没有名字的对象。是对象的一种简化表示形式</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5837-1513823960010</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <heading compat="true" level="2">
      <coId>9373-1513823830306</coId>
      <text>5.2 匿名对象的两种使用情况</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>15</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>15</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>2869-1513823830306</coId>
      <text>1. 对象调用方法仅仅一次的时候(可以理解为专属对象)</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>16</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>7959-1513941738992</coId>
      <text>new StudentDome().method(s);</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>28</to>
          <value>#769436</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>9031-1513824000704</coId>
      <text>2. 作为实际参数传递</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>11</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>3317-1513941775891</coId>
      <text>new StudentDome().method(new Student());</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>40</to>
          <value>#769436</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>1099-1513823830306</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>8146-1513941792139</coId>
      <text>5.3 好处</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>6</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>7481-1513824548210</coId>
      <text>1. 书写简单</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2836-1513824122338</coId>
      <text>2. 节省栈内存空间</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>3671-1513824138911</coId>
      <text>3 . 加快对象的销毁（使用GC回收的时候，他会判断该对象有没有引用指向他）</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5267-1513824786743</coId>
      <text>有，匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。 带名字的对象被调用完以后不会被回收，还是要和对象s连着</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>5576-1513823819213</coId>
      <text>注意事项</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6920-1513824464736</coId>
      <text>(1).我们一般不会用匿名对象给属性赋值，无法获取属性值。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1467-1513824464736</coId>
      <text>(2).创建出来每一次都是一个新的对象。想调用多次的时候，不适合。</text>
      <inline-styles>
        <color>
          <from>20</from>
          <to>32</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5229-1513824466721</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>9510-1513750593401</coId>
      <text>6. 封装(private)</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>14</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>14</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <heading compat="true" level="2">
      <coId>7977-1513825098085</coId>
      <text>6.1 概述</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>6</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>1394-1513825796181</coId>
      <text>是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1140-1513825796181</coId>
      <text>好处：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>3</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1340-1513825796181</coId>
      <text>隐藏实现细节，提供公共的访问方式</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5927-1513825796181</coId>
      <text>提高了代码的复用性</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4546-1513825796181</coId>
      <text>提高安全性。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4721-1513835361896</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9621-1513825796181</coId>
      <text>封装原则：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1517-1513825796181</coId>
      <text>将不需要对外提供的内容都隐藏起来。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9472-1513825796181</coId>
      <text>把属性隐藏，提供公共方法对其访问。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5951-1513825796181</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>7538-1513825796181</coId>
      <text>6.2 private关键字</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>14</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>14</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>4766-1513825805525</coId>
      <text>是一个权限修饰符。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7716-1513825805525</coId>
      <text>可以修饰成员(成员变量和成员方法)</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3750-1513825805525</coId>
      <text>被private修饰的成员只在本类中才能访问。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3900-1513825805525</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3553-1513825805525</coId>
      <text>private最常见的应用：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>14</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9141-1513825805525</coId>
      <text>把成员变量用private修饰</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9287-1513825805525</coId>
      <text>提供对应的getXxx()/setXxx()方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8040-1513825805525</coId>
      <text>一个标准的案例的使用</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8790-1513825805525</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>5366-1513750593401</coId>
      <text>7. this关键字</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>4394-1513836972591</coId>
      <text>this:代表所在类的对象引用</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9663-1513836997321</coId>
      <text>记住：</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9739-1513836997321</coId>
      <text>方法被哪个对象调用，this就代表那个对象</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9430-1513836997321</coId>
      <text>什么时候使用this呢?</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>5720-1513836997321</coId>
      <text>局部变量隐藏成员变量</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3188-1513836997321</coId>
      <text>其他用法后面和super一起讲解</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5560-1513837337763</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3170-1513837338071</coId>
      <text>作用：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>3</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9396-1513837416373</coId>
      <text>使用this关键字， 就可以在就局部优先的规则影响下，去访问到优先级别低的成员变量</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5578-1513836997321</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>6997-1513750593401</coId>
      <text>8. 构造方法</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <heading compat="true" level="2">
      <coId>4780-1513840885006</coId>
      <text>8.1 构造方法作用概述</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>12</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5431-1513840887890</coId>
      <text>给对象的数据进行初始化</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1240-1513840887890</coId>
      <text>构造方法格式</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>6596-1513840887890</coId>
      <text>方法名与类名相同</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5080-1513840887890</coId>
      <text>没有返回值类型，连void都没有</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4753-1513840887890</coId>
      <text>没有具体的返回值</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8073-1513841675410</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4450-1513841670480</coId>
      <text>作用：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>3</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>7169-1513841670923</coId>
      <text>给成员变量初始化的。</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <code>
      <coId>5328-1513840887890</coId>
      <text>//成员方法 public void setName(String name){ this.name = name; }</text>
      <inline-styles>
        <color>
          <from>4</from>
          <to>10</to>
          <value>#769436</value>
        </color>
        <color>
          <from>11</from>
          <to>45</to>
          <value>#769436</value>
        </color>
        <color>
          <from>46</from>
          <to>65</to>
          <value>#769436</value>
        </color>
        <color>
          <from>66</from>
          <to>68</to>
          <value>#769436</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>2031-1513941895579</coId>
      <text>构造方法注意事项</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>5144-1513840887890</coId>
      <text>如果你不提供构造方法，系统会给出默认构造方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6027-1513840887890</coId>
      <text>如果你提供了构造方法，系统将不再提供（若你这个时候没有定义一个无参的构造方法，容易出现构造方法异常）</text>
      <inline-styles>
        <color>
          <from>18</from>
          <to>50</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2371-1513840887890</coId>
      <text>构造方法也是可以重载的</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6274-1513849310461</coId>
      <text>构造方法执行过程中可以执行类的别的方法</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>19</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1980-1513841636387</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7915-1513923035507</coId>
      <text>如果构造方法是私有构造方法，那么只能直接调用，不能new对象方式来调用</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>35</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>35</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>8721-1513923090864</coId>
      <text>可以防止该类创建对象</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>5532-1519613163211</coId>
      <text>通常在工具类中使用</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <code>
      <coId>8530-1513942003478</coId>
      <text>public class Student {     // 成员变量     private String name;     private String sex;     private int age;     // 构造方法     public Student() {         System.out.println("无参构造");     }     // 有参构造方法     public Student(String name, String sex, int age) {         System.out.println("有参构造");         this.name = name;         this.sex = sex;         this.age = age;     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <bold>
          <from>7</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <bold>
          <from>39</from>
          <to>46</to>
          <value>true</value>
        </bold>
        <bold>
          <from>64</from>
          <to>71</to>
          <value>true</value>
        </bold>
        <bold>
          <from>88</from>
          <to>95</to>
          <value>true</value>
        </bold>
        <bold>
          <from>96</from>
          <to>99</to>
          <value>true</value>
        </bold>
        <bold>
          <from>121</from>
          <to>127</to>
          <value>true</value>
        </bold>
        <bold>
          <from>155</from>
          <to>158</to>
          <value>true</value>
        </bold>
        <bold>
          <from>200</from>
          <to>206</to>
          <value>true</value>
        </bold>
        <bold>
          <from>240</from>
          <to>243</to>
          <value>true</value>
        </bold>
        <bold>
          <from>266</from>
          <to>269</to>
          <value>true</value>
        </bold>
        <bold>
          <from>295</from>
          <to>299</to>
          <value>true</value>
        </bold>
        <bold>
          <from>321</from>
          <to>325</to>
          <value>true</value>
        </bold>
        <bold>
          <from>345</from>
          <to>349</to>
          <value>true</value>
        </bold>
        <italic>
          <from>155</from>
          <to>158</to>
          <value>true</value>
        </italic>
        <italic>
          <from>266</from>
          <to>269</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>22</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>23</from>
          <to>34</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>35</from>
          <to>59</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>60</from>
          <to>83</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>84</from>
          <to>104</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>105</from>
          <to>116</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>117</from>
          <to>139</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>140</from>
          <to>175</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>176</from>
          <to>181</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>182</from>
          <to>195</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>196</from>
          <to>250</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>251</from>
          <to>286</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>287</from>
          <to>312</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>313</from>
          <to>336</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>337</from>
          <to>360</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>361</from>
          <to>366</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>367</from>
          <to>368</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>6</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>6</from>
          <to>7</to>
          <value>#393939</value>
        </color>
        <color>
          <from>7</from>
          <to>12</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>12</from>
          <to>22</to>
          <value>#393939</value>
        </color>
        <color>
          <from>23</from>
          <to>27</to>
          <value>#393939</value>
        </color>
        <color>
          <from>27</from>
          <to>34</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>35</from>
          <to>39</to>
          <value>#393939</value>
        </color>
        <color>
          <from>39</from>
          <to>46</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>46</from>
          <to>54</to>
          <value>#393939</value>
        </color>
        <color>
          <from>54</from>
          <to>58</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>58</from>
          <to>59</to>
          <value>#393939</value>
        </color>
        <color>
          <from>60</from>
          <to>64</to>
          <value>#393939</value>
        </color>
        <color>
          <from>64</from>
          <to>71</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>71</from>
          <to>79</to>
          <value>#393939</value>
        </color>
        <color>
          <from>79</from>
          <to>82</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>82</from>
          <to>83</to>
          <value>#393939</value>
        </color>
        <color>
          <from>84</from>
          <to>88</to>
          <value>#393939</value>
        </color>
        <color>
          <from>88</from>
          <to>95</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>95</from>
          <to>96</to>
          <value>#393939</value>
        </color>
        <color>
          <from>96</from>
          <to>99</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>99</from>
          <to>100</to>
          <value>#393939</value>
        </color>
        <color>
          <from>100</from>
          <to>103</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>103</from>
          <to>104</to>
          <value>#393939</value>
        </color>
        <color>
          <from>105</from>
          <to>109</to>
          <value>#393939</value>
        </color>
        <color>
          <from>109</from>
          <to>116</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>117</from>
          <to>121</to>
          <value>#393939</value>
        </color>
        <color>
          <from>121</from>
          <to>127</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>127</from>
          <to>139</to>
          <value>#393939</value>
        </color>
        <color>
          <from>140</from>
          <to>155</to>
          <value>#393939</value>
        </color>
        <color>
          <from>155</from>
          <to>158</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>158</from>
          <to>167</to>
          <value>#393939</value>
        </color>
        <color>
          <from>167</from>
          <to>173</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>173</from>
          <to>175</to>
          <value>#393939</value>
        </color>
        <color>
          <from>176</from>
          <to>181</to>
          <value>#393939</value>
        </color>
        <color>
          <from>182</from>
          <to>186</to>
          <value>#393939</value>
        </color>
        <color>
          <from>186</from>
          <to>195</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>196</from>
          <to>200</to>
          <value>#393939</value>
        </color>
        <color>
          <from>200</from>
          <to>206</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>206</from>
          <to>222</to>
          <value>#393939</value>
        </color>
        <color>
          <from>222</from>
          <to>226</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>226</from>
          <to>235</to>
          <value>#393939</value>
        </color>
        <color>
          <from>235</from>
          <to>238</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>238</from>
          <to>240</to>
          <value>#393939</value>
        </color>
        <color>
          <from>240</from>
          <to>243</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>243</from>
          <to>244</to>
          <value>#393939</value>
        </color>
        <color>
          <from>244</from>
          <to>247</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>247</from>
          <to>250</to>
          <value>#393939</value>
        </color>
        <color>
          <from>251</from>
          <to>266</to>
          <value>#393939</value>
        </color>
        <color>
          <from>266</from>
          <to>269</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>269</from>
          <to>278</to>
          <value>#393939</value>
        </color>
        <color>
          <from>278</from>
          <to>284</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>284</from>
          <to>286</to>
          <value>#393939</value>
        </color>
        <color>
          <from>287</from>
          <to>295</to>
          <value>#393939</value>
        </color>
        <color>
          <from>295</from>
          <to>299</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>299</from>
          <to>300</to>
          <value>#393939</value>
        </color>
        <color>
          <from>300</from>
          <to>304</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>304</from>
          <to>307</to>
          <value>#393939</value>
        </color>
        <color>
          <from>307</from>
          <to>311</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>311</from>
          <to>312</to>
          <value>#393939</value>
        </color>
        <color>
          <from>313</from>
          <to>321</to>
          <value>#393939</value>
        </color>
        <color>
          <from>321</from>
          <to>325</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>325</from>
          <to>326</to>
          <value>#393939</value>
        </color>
        <color>
          <from>326</from>
          <to>329</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>329</from>
          <to>332</to>
          <value>#393939</value>
        </color>
        <color>
          <from>332</from>
          <to>335</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>335</from>
          <to>336</to>
          <value>#393939</value>
        </color>
        <color>
          <from>337</from>
          <to>345</to>
          <value>#393939</value>
        </color>
        <color>
          <from>345</from>
          <to>349</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>349</from>
          <to>350</to>
          <value>#393939</value>
        </color>
        <color>
          <from>350</from>
          <to>353</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>353</from>
          <to>356</to>
          <value>#393939</value>
        </color>
        <color>
          <from>356</from>
          <to>359</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>359</from>
          <to>360</to>
          <value>#393939</value>
        </color>
        <color>
          <from>361</from>
          <to>366</to>
          <value>#393939</value>
        </color>
        <color>
          <from>367</from>
          <to>368</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>8341-1542285810924</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <code>
      <coId>4427-1513942083978</coId>
      <text>public class Student {     // 私有构造方法，这样别人不能通过new对象方式调用     private Student() {         System.out.println("私有无参构造");     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <bold>
          <from>7</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <bold>
          <from>59</from>
          <to>66</to>
          <value>true</value>
        </bold>
        <bold>
          <from>94</from>
          <to>97</to>
          <value>true</value>
        </bold>
        <italic>
          <from>94</from>
          <to>97</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>22</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>23</from>
          <to>54</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>55</from>
          <to>78</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>79</from>
          <to>116</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>117</from>
          <to>122</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>123</from>
          <to>124</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>6</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>6</from>
          <to>7</to>
          <value>#393939</value>
        </color>
        <color>
          <from>7</from>
          <to>12</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>12</from>
          <to>22</to>
          <value>#393939</value>
        </color>
        <color>
          <from>23</from>
          <to>27</to>
          <value>#393939</value>
        </color>
        <color>
          <from>27</from>
          <to>54</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>55</from>
          <to>59</to>
          <value>#393939</value>
        </color>
        <color>
          <from>59</from>
          <to>66</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>66</from>
          <to>78</to>
          <value>#393939</value>
        </color>
        <color>
          <from>79</from>
          <to>94</to>
          <value>#393939</value>
        </color>
        <color>
          <from>94</from>
          <to>97</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>97</from>
          <to>106</to>
          <value>#393939</value>
        </color>
        <color>
          <from>106</from>
          <to>114</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>114</from>
          <to>116</to>
          <value>#393939</value>
        </color>
        <color>
          <from>117</from>
          <to>122</to>
          <value>#393939</value>
        </color>
        <color>
          <from>123</from>
          <to>124</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>7054-1513942080148</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>3086-1513846283091</coId>
      <text>8.2 类的成员方法</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>2577-1513846273232</coId>
      <text>成员方法其实就是我们前面讲过的方法</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>8661-1513846270373</coId>
      <text>方法具体划分：</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7252-1513846270373</coId>
      <text>根据返回值</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7071-1513846270373</coId>
      <text>有明确返回值方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>7722-1513846270373</coId>
      <text>返回void类型的方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>3055-1513846270373</coId>
      <text>根据形式参数</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7738-1513846270373</coId>
      <text>无参方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>2348-1513846270373</coId>
      <text>带参方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>5624-1513846270373</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <heading compat="true" level="2">
      <coId>8169-1513846344764</coId>
      <text>8.3 标准类</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>1753-1513846458539</coId>
      <text>类的组成</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>4327-1513846492348</coId>
      <text>成员变量</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9250-1513846497722</coId>
      <text>成员方法</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6600-1513846501140</coId>
      <text>构造方法</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7039-1513840885180</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4099-1513846777612</coId>
      <text>一个基本类的标准代码写法：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>13</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>13</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9835-1513846442465</coId>
      <text>类</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>1</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>6735-1513846740421</coId>
      <text>成员变量</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4831-1513846740421</coId>
      <text>构造方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9152-1513846740421</coId>
      <text>无参构造方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>2539-1513846740421</coId>
      <text>带参构造方法</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>3437-1513846740421</coId>
      <text>成员方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4884-1513846740421</coId>
      <text>getXxx()</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>9377-1513846740421</coId>
      <text>setXxx()</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>8390-1513846740421</coId>
      <text>给成员变量赋值的方式</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>6637-1513846740421</coId>
      <text>无参构造方法+setXxx()</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8762-1513846740421</coId>
      <text>带参构造方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3564-1513846740421</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>8418-1513846740421</coId>
      <text>9.类的初始化过程</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>9</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>9</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>6660-1513846442465</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3653-1568823156669</coId>
      <text>Student s = new Student();在内存中做了哪些事情?</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>37</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1830-1514166336693</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4600-1514166329408</coId>
      <text>Student</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9496-1513848042001</coId>
      <text>加载Student.class文件进内存(方法区)</text>
      <inline-styles>
        <color>
          <from>20</from>
          <to>25</to>
          <value>#e66c00</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9289-1514166303240</coId>
      <text>new</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>3</to>
          <value>#e66c00</value>
        </color>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>3414-1513848042001</coId>
      <text>在栈内存为s开辟空间</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9386-1513848042001</coId>
      <text>在堆内存为学生对象开辟空间</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7062-1514166308493</coId>
      <text>stdent() 其实这个都是在jvm里面隐含的</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6525-1513848042001</coId>
      <text>对学生对象的成员变量进行默认初始化（null 0）</text>
      <inline-styles>
        <color>
          <from>12</from>
          <to>25</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3084-1513848042001</coId>
      <text>对学生对象的成员变量进行显示初始化</text>
      <inline-styles>
        <color>
          <from>12</from>
          <to>17</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7171-1513848042001</coId>
      <text>通过构造方法对学生对象的成员变量赋值</text>
      <inline-styles>
        <color>
          <from>2</from>
          <to>6</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>8500-1514166322015</coId>
      <text>s = new Student();</text>
      <inline-styles>
        <bold>
          <from>4</from>
          <to>18</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>2770-1513848042001</coId>
      <text>学生对象初始化完毕，把对象地址赋值给s变量</text>
      <inline-styles>
        <color>
          <from>11</from>
          <to>15</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>3491-1514166378464</coId>
      <text>class Student{    private String name = "社会我王婶";     private int age = 30;     public Student(){         //这里其实是jvm给你隐含了几步“         // 4：对象成员变量默认初始化（null 0）         // 5：对象成员变量显式初始化         // 6：对象成员变量构造方法初始化         //如果构造方法比成员变量显示初始化要早，那么此处应该输出null         System.out.println(name);         name = "大唐小姐姐";         age = 31;         System.out.println(name);     }     public void show(){         System.out.println(name+"--"+age);     } } class ClassInitDemo{     public static void main(String[] args){         //创建对象         Student s = new Student();         s.show();      } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
        <bold>
          <from>23</from>
          <to>30</to>
          <value>true</value>
        </bold>
        <bold>
          <from>58</from>
          <to>65</to>
          <value>true</value>
        </bold>
        <bold>
          <from>66</from>
          <to>69</to>
          <value>true</value>
        </bold>
        <bold>
          <from>84</from>
          <to>90</to>
          <value>true</value>
        </bold>
        <bold>
          <from>271</from>
          <to>274</to>
          <value>true</value>
        </bold>
        <bold>
          <from>347</from>
          <to>350</to>
          <value>true</value>
        </bold>
        <bold>
          <from>376</from>
          <to>382</to>
          <value>true</value>
        </bold>
        <bold>
          <from>383</from>
          <to>387</to>
          <value>true</value>
        </bold>
        <bold>
          <from>411</from>
          <to>414</to>
          <value>true</value>
        </bold>
        <bold>
          <from>447</from>
          <to>452</to>
          <value>true</value>
        </bold>
        <bold>
          <from>472</from>
          <to>478</to>
          <value>true</value>
        </bold>
        <bold>
          <from>479</from>
          <to>485</to>
          <value>true</value>
        </bold>
        <bold>
          <from>486</from>
          <to>490</to>
          <value>true</value>
        </bold>
        <bold>
          <from>547</from>
          <to>550</to>
          <value>true</value>
        </bold>
        <italic>
          <from>271</from>
          <to>274</to>
          <value>true</value>
        </italic>
        <italic>
          <from>347</from>
          <to>350</to>
          <value>true</value>
        </italic>
        <italic>
          <from>411</from>
          <to>414</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>18</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>23</from>
          <to>53</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>54</from>
          <to>79</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>80</from>
          <to>101</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>102</from>
          <to>128</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>129</from>
          <to>140</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>162</from>
          <to>173</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>187</from>
          <to>198</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>214</from>
          <to>255</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>256</from>
          <to>289</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>290</from>
          <to>313</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>314</from>
          <to>331</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>332</from>
          <to>365</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>366</from>
          <to>371</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>372</from>
          <to>395</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>396</from>
          <to>438</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>439</from>
          <to>444</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>445</from>
          <to>446</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>447</from>
          <to>467</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>468</from>
          <to>511</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>512</from>
          <to>526</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>527</from>
          <to>561</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>562</from>
          <to>580</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>581</from>
          <to>586</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>587</from>
          <to>588</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>5</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>5</from>
          <to>18</to>
          <value>#393939</value>
        </color>
        <color>
          <from>23</from>
          <to>30</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>30</from>
          <to>38</to>
          <value>#393939</value>
        </color>
        <color>
          <from>38</from>
          <to>42</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>42</from>
          <to>45</to>
          <value>#393939</value>
        </color>
        <color>
          <from>45</from>
          <to>52</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>52</from>
          <to>53</to>
          <value>#393939</value>
        </color>
        <color>
          <from>54</from>
          <to>58</to>
          <value>#393939</value>
        </color>
        <color>
          <from>58</from>
          <to>65</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>65</from>
          <to>66</to>
          <value>#393939</value>
        </color>
        <color>
          <from>66</from>
          <to>69</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>69</from>
          <to>70</to>
          <value>#393939</value>
        </color>
        <color>
          <from>70</from>
          <to>73</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>73</from>
          <to>79</to>
          <value>#393939</value>
        </color>
        <color>
          <from>80</from>
          <to>84</to>
          <value>#393939</value>
        </color>
        <color>
          <from>84</from>
          <to>90</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>90</from>
          <to>101</to>
          <value>#393939</value>
        </color>
        <color>
          <from>102</from>
          <to>109</to>
          <value>#393939</value>
        </color>
        <color>
          <from>109</from>
          <to>128</to>
          <value>#df402a</value>
        </color>
        <color>
          <from>129</from>
          <to>153</to>
          <value>#393939</value>
        </color>
        <color>
          <from>153</from>
          <to>161</to>
          <value>#df402a</value>
        </color>
        <color>
          <from>162</from>
          <to>186</to>
          <value>#393939</value>
        </color>
        <color>
          <from>187</from>
          <to>213</to>
          <value>#393939</value>
        </color>
        <color>
          <from>214</from>
          <to>222</to>
          <value>#393939</value>
        </color>
        <color>
          <from>222</from>
          <to>255</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>256</from>
          <to>271</to>
          <value>#393939</value>
        </color>
        <color>
          <from>271</from>
          <to>274</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>274</from>
          <to>283</to>
          <value>#393939</value>
        </color>
        <color>
          <from>283</from>
          <to>287</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>287</from>
          <to>289</to>
          <value>#393939</value>
        </color>
        <color>
          <from>290</from>
          <to>298</to>
          <value>#393939</value>
        </color>
        <color>
          <from>298</from>
          <to>302</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>302</from>
          <to>305</to>
          <value>#393939</value>
        </color>
        <color>
          <from>305</from>
          <to>312</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>312</from>
          <to>313</to>
          <value>#393939</value>
        </color>
        <color>
          <from>314</from>
          <to>322</to>
          <value>#393939</value>
        </color>
        <color>
          <from>322</from>
          <to>325</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>325</from>
          <to>331</to>
          <value>#393939</value>
        </color>
        <color>
          <from>332</from>
          <to>347</to>
          <value>#393939</value>
        </color>
        <color>
          <from>347</from>
          <to>350</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>350</from>
          <to>359</to>
          <value>#393939</value>
        </color>
        <color>
          <from>359</from>
          <to>363</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>363</from>
          <to>365</to>
          <value>#393939</value>
        </color>
        <color>
          <from>366</from>
          <to>371</to>
          <value>#393939</value>
        </color>
        <color>
          <from>372</from>
          <to>376</to>
          <value>#393939</value>
        </color>
        <color>
          <from>376</from>
          <to>382</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>382</from>
          <to>383</to>
          <value>#393939</value>
        </color>
        <color>
          <from>383</from>
          <to>387</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>387</from>
          <to>395</to>
          <value>#393939</value>
        </color>
        <color>
          <from>396</from>
          <to>411</to>
          <value>#393939</value>
        </color>
        <color>
          <from>411</from>
          <to>414</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>414</from>
          <to>423</to>
          <value>#393939</value>
        </color>
        <color>
          <from>423</from>
          <to>427</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>427</from>
          <to>428</to>
          <value>#393939</value>
        </color>
        <color>
          <from>428</from>
          <to>432</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>432</from>
          <to>433</to>
          <value>#393939</value>
        </color>
        <color>
          <from>433</from>
          <to>436</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>436</from>
          <to>438</to>
          <value>#393939</value>
        </color>
        <color>
          <from>439</from>
          <to>444</to>
          <value>#393939</value>
        </color>
        <color>
          <from>445</from>
          <to>446</to>
          <value>#393939</value>
        </color>
        <color>
          <from>447</from>
          <to>452</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>452</from>
          <to>467</to>
          <value>#393939</value>
        </color>
        <color>
          <from>468</from>
          <to>472</to>
          <value>#393939</value>
        </color>
        <color>
          <from>472</from>
          <to>478</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>478</from>
          <to>479</to>
          <value>#393939</value>
        </color>
        <color>
          <from>479</from>
          <to>485</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>485</from>
          <to>486</to>
          <value>#393939</value>
        </color>
        <color>
          <from>486</from>
          <to>490</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>490</from>
          <to>505</to>
          <value>#393939</value>
        </color>
        <color>
          <from>505</from>
          <to>509</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>509</from>
          <to>511</to>
          <value>#393939</value>
        </color>
        <color>
          <from>512</from>
          <to>520</to>
          <value>#393939</value>
        </color>
        <color>
          <from>520</from>
          <to>526</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>527</from>
          <to>543</to>
          <value>#393939</value>
        </color>
        <color>
          <from>543</from>
          <to>544</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>544</from>
          <to>547</to>
          <value>#393939</value>
        </color>
        <color>
          <from>547</from>
          <to>550</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>550</from>
          <to>561</to>
          <value>#393939</value>
        </color>
        <color>
          <from>562</from>
          <to>570</to>
          <value>#393939</value>
        </color>
        <color>
          <from>570</from>
          <to>571</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>571</from>
          <to>580</to>
          <value>#393939</value>
        </color>
        <color>
          <from>581</from>
          <to>586</to>
          <value>#393939</value>
        </color>
        <color>
          <from>587</from>
          <to>588</to>
          <value>#393939</value>
        </color>
        <back-color>
          <from>109</from>
          <to>128</to>
          <value>#fae220</value>
        </back-color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>9576-1542285863207</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7080-1513942173360</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="1">
      <coId>6075-1514082141649</coId>
      <text>10. static关键字（静态）</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>17</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>17</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>5200-1513750593401</coId>
      <text>static 是一个修饰符，是静态或者是全局的意思。可以修饰成员变量和成员方法</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9550-1514081449456</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>7123-1514081694053</coId>
      <text>10.1 概念</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>8840-1514081684143</coId>
      <text>static可以做什么：</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4159-1514081469495</coId>
      <text>修饰成员变量：类变量，不属于对象，而是属于类。</text>
      <inline-styles>
        <bold>
          <from>2</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5168-1514081494958</coId>
      <text>修饰成员方法：静态方法，储存在方法区的静态区</text>
      <inline-styles>
        <bold>
          <from>2</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6262-1514081512000</coId>
      <text>修饰代码块：在class类文件加载到方法去的时候，进行对类进行初始化用的。</text>
      <inline-styles>
        <bold>
          <from>2</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1520-1514081520204</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1593-1514081523087</coId>
      <text>static修饰的成员方法和成员方法习惯上称为静态变量和静态方法</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>5890-1514081569090</coId>
      <text>调用方式：</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7160-1514081580844</coId>
      <text>类名.成员变量</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>7377-1514081586733</coId>
      <text>类名.成员方法(..)</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>5858-1514081614954</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>6768-1513909724078</coId>
      <text>10.2 static关键字特点</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>16</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>16</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5797-1513909724078</coId>
      <text>1. 随着类的加载而加载</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>12</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7052-1513910183302</coId>
      <text>随着类的加载而将Static修饰的成员加载到方法区的静态区</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>29</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9155-1513909724078</coId>
      <text>2. 优先于对象存在</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2647-1513911979326</coId>
      <text>只要class类文加载到方法区内，就算不调用，static修饰的方法和变量都会被提前初始化</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>45</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>8900-1513909724078</coId>
      <text>3. 被类的所有对象共享（只需要定义一份就可以了）</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>25</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9070-1513909846039</coId>
      <text>只要在一个对象定义一下就行了，其余的对象就不需要对这儿变量进行初始化了。！！！！！</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>41</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4088-1513910153324</coId>
      <text>这也是我们判断是否使用静态关键字的条件</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1624-1513910231155</coId>
      <text>只有重复出现在不同对象的成员变量数据，才需要</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>8361-1513910166488</coId>
      <text>4. 可以通过类名调用</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>11</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4865-1513910373973</coId>
      <text>//只要方法是static修饰的，就可以不通过new对象，直接就可以通过类名调用。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5832-1513910533116</coId>
      <text>//类中的static修饰的变量，都是提前初始化好了，可以直接用变量初始化的值。</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <code>
      <coId>6437-1513911902599</coId>
      <text>class Person{     // 使用static修饰成员变量     private static String country = "中国";     public static void show(){         System.out.println(country);     } } class StaticDemo{     public static void main(String[] args){ // show2方法是static修饰的，可以不new对象直接通过类名调用。 // 类的static静态成员，优于对象而存在         Person.show();//country 大唐国     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
        <bold>
          <from>40</from>
          <to>47</to>
          <value>true</value>
        </bold>
        <bold>
          <from>48</from>
          <to>54</to>
          <value>true</value>
        </bold>
        <bold>
          <from>82</from>
          <to>88</to>
          <value>true</value>
        </bold>
        <bold>
          <from>89</from>
          <to>95</to>
          <value>true</value>
        </bold>
        <bold>
          <from>96</from>
          <to>100</to>
          <value>true</value>
        </bold>
        <bold>
          <from>124</from>
          <to>127</to>
          <value>true</value>
        </bold>
        <bold>
          <from>154</from>
          <to>159</to>
          <value>true</value>
        </bold>
        <bold>
          <from>176</from>
          <to>182</to>
          <value>true</value>
        </bold>
        <bold>
          <from>183</from>
          <to>189</to>
          <value>true</value>
        </bold>
        <bold>
          <from>190</from>
          <to>194</to>
          <value>true</value>
        </bold>
        <italic>
          <from>62</from>
          <to>69</to>
          <value>true</value>
        </italic>
        <italic>
          <from>124</from>
          <to>127</to>
          <value>true</value>
        </italic>
        <italic>
          <from>136</from>
          <to>143</to>
          <value>true</value>
        </italic>
        <underline>
          <from>0</from>
          <to>1</to>
          <value>true</value>
        </underline>
        <underline>
          <from>154</from>
          <to>155</to>
          <value>true</value>
        </underline>
        <font-size>
          <from>0</from>
          <to>13</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>14</from>
          <to>35</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>36</from>
          <to>77</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>78</from>
          <to>108</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>109</from>
          <to>145</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>146</from>
          <to>151</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>152</from>
          <to>153</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>154</from>
          <to>171</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>172</from>
          <to>215</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>216</from>
          <to>254</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>255</from>
          <to>278</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>279</from>
          <to>314</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>315</from>
          <to>320</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>321</from>
          <to>322</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>5</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>18</from>
          <to>35</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>40</from>
          <to>47</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>48</from>
          <to>54</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>62</from>
          <to>69</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>72</from>
          <to>76</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>82</from>
          <to>88</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>89</from>
          <to>95</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>96</from>
          <to>100</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>124</from>
          <to>127</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>136</from>
          <to>143</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>154</from>
          <to>159</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>176</from>
          <to>182</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>183</from>
          <to>189</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>190</from>
          <to>194</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>209</from>
          <to>213</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>216</from>
          <to>254</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>255</from>
          <to>278</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>301</from>
          <to>314</to>
          <value>#3f7f5f</value>
        </color>
      </inline-styles>
      <styles/>
      <language>java</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>7446-1513910363497</coId>
      <text>5. 静态区的变量，是可以变化的</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>16</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <code>
      <coId>2100-1513910882749</coId>
      <text>    //static修饰的成员变量，一旦被修改，后面的其他对象中的country值也会修改     Person p1 = new Person("马云",50);     p1.show();//country 中国     //给马化腾修改一下国籍     Person p2 = new Person("马化腾","大唐国",45);     p2.show();//country 大唐国     Person p3 = new Person("雷军",40);     p3.show();//country 大唐国</text>
      <inline-styles>
        <bold>
          <from>64</from>
          <to>67</to>
          <value>true</value>
        </bold>
        <bold>
          <from>145</from>
          <to>148</to>
          <value>true</value>
        </bold>
        <bold>
          <from>217</from>
          <to>220</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>47</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>48</from>
          <to>84</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>85</from>
          <to>111</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>112</from>
          <to>128</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>129</from>
          <to>172</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>173</from>
          <to>200</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>201</from>
          <to>237</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>238</from>
          <to>265</to>
          <value>13</value>
        </font-size>
        <color>
          <from>4</from>
          <to>47</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>64</from>
          <to>67</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>75</from>
          <to>79</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>99</from>
          <to>111</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>116</from>
          <to>128</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>145</from>
          <to>148</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>156</from>
          <to>161</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>162</from>
          <to>167</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>187</from>
          <to>200</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>217</from>
          <to>220</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>228</from>
          <to>232</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>252</from>
          <to>265</to>
          <value>#3f7f5f</value>
        </color>
      </inline-styles>
      <styles/>
      <language>java</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>6829-1513912534952</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <heading compat="true" level="2">
      <coId>1662-1513910686080</coId>
      <text>10.3 static关键字注意事项</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>18</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>18</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>2991-1513912535704</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3796-1513909724078</coId>
      <text>1. 在静态方法中是没有this关键字的</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>20</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5620-1513912345273</coId>
      <text>this中的变量可能没有提前初始化，所以不能调用</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>24</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>8097-1513909724078</coId>
      <text>2. 静态方法只能访问静态的成员变量和静态的成员方法</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>26</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9567-1513912272827</coId>
      <text>因为要是用非静态变量和方法是没有被初始化的，</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>22</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2056-1513912337664</coId>
      <text>所以静态方法不能调用没被初始化的变量和方法</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>21</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2851-1513912410583</coId>
      <text>3. static方法既可以用类直接调用，也可以直接new对象通过对象调用。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>38</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <code>
      <coId>7570-1513912513581</coId>
      <text>// show2方法是static修饰的，也可以new对象通过对象调用。 Person p1 = new Person("马云",50); p1.show2();//country 中国</text>
      <inline-styles>
        <bold>
          <from>49</from>
          <to>52</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>36</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>37</from>
          <to>69</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>70</from>
          <to>93</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>36</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>49</from>
          <to>52</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>60</from>
          <to>64</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>81</from>
          <to>93</to>
          <value>#3f7f5f</value>
        </color>
      </inline-styles>
      <styles/>
      <language>java</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>4580-1513923410572</coId>
      <text>4. 要是其如果构造方法是（private）私有构造方法，那么只能直接调用，不能new对象方式来调用</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>50</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>50</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1637-1513923428283</coId>
      <text>可以防止该类创建对象</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>10</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>9786-1514116539336</coId>
      <text>5. 静态方法只能被重载，不能被重写</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>18</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>18</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1948-1516884603621</coId>
      <text>static、final、private方法本身都是编译期绑定的（也叫前期绑定）这些方法不存在多态</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>9230-1514081949421</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>2367-1514081824491</coId>
      <text>10.4 使用场景</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>9</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>9</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>8730-1514081842107</coId>
      <text>静态变量</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4960-1514081849527</coId>
      <text>在多个对象中共享变量</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>6734-1514081862628</coId>
      <text>静态方法访问变量时</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>6286-1514081872257</coId>
      <text>静态方法</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7590-1514081878179</coId>
      <text>制作工具类时，方便调用</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>8241-1514081888734</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>8625-1514081812068</coId>
      <text>10.5 静态变量和成员变量的区别</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>17</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>17</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>1480-1513912609835</coId>
      <text>所属不同</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>7030-1513912614147</coId>
      <text>静态变量属于类，所以也称为为类变量</text>
      <inline-styles>
        <color>
          <from>14</from>
          <to>17</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5450-1513912614147</coId>
      <text>成员变量属于对象，所以也称为实例变量(对象变量)</text>
      <inline-styles>
        <color>
          <from>14</from>
          <to>24</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4278-1513912614147</coId>
      <text>内存中位置不同</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>5260-1513912614147</coId>
      <text>静态变量存储于方法区的静态区</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2394-1513912614147</coId>
      <text>成员变量存储于堆内存</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1585-1513912614147</coId>
      <text>内存出现时间不同</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>4449-1513912614147</coId>
      <text>静态变量随着类的加载而加载，随着类的消失而消失</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5699-1513912614147</coId>
      <text>成员变量随着对象的创建而存在，随着对象的消失而消失</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8261-1513912614147</coId>
      <text>调用不同</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>3868-1513912614147</coId>
      <text>静态变量可以通过类名调用，也可以通过对象调用</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>22</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>7662-1513912614147</coId>
      <text>成员变量只能通过对象名调用</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>13</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>6697-1513912952130</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>8710-1513912953370</coId>
      <text>10.6 main方法解读</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>13</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>13</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5758-1513912947055</coId>
      <text>    main方法解读</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3081-1513913322551</coId>
      <text>    public static void main(String[] args)</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1288-1513913322551</coId>
      <text>   </text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4593-1513913322551</coId>
      <text>    public :访问权限修饰符</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>8813-1513913322551</coId>
      <text>    static  :静态修饰符，修饰的成员不需要new对象就可以直接访问</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9395-1513913322551</coId>
      <text>    void    :无返回值，main方法是由JVM调用，JVM不需要返回值</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6166-1513913322551</coId>
      <text>    main    :jvm约定，只识别main方法</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1355-1513913322551</coId>
      <text>    args    :以前用于接收键盘录入的</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1960-1513913322551</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>4683-1513912614147</coId>
      <text>11 帮助文档</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </para>
    <heading compat="true" level="2">
      <coId>8175-1513921698522</coId>
      <text>11.1 制作帮助文档</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>11</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>11</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>7064-1513925903039</coId>
      <text>制作工具类</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>3092-1513940303292</coId>
      <text>ArrayTools</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3648-1513940303292</coId>
      <text>制作帮助文档步骤</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>8</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9800-1513940303292</coId>
      <text>添加文档注释</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>4943-1513940303292</coId>
      <text>/** */</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>3328-1513940303292</coId>
      <text>@author @param @return @version</text>
      <inline-styles/>
      <styles>
        <indent>2</indent>
      </styles>
    </para>
    <para>
      <coId>1917-1513940303292</coId>
      <text>使用javadoc工具解析文档注释</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8696-1513940303292</coId>
      <text>javadoc -d 目录 -author -version ArrayTools.java</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3252-1513940338419</coId>
      <text>注意：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>3</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <list-item level="1" list-id="5660-1513940416285">
      <coId>3079-1513940342761</coId>
      <text>源代码是否在一个文件中不重要，重要的是class文件在同一个文件夹下，就能调用。回顾之前的代码是否都是这样</text>
      <inline-styles/>
      <styles/>
    </list-item>
    <list-item level="1" list-id="5660-1513940416285">
      <coId>2331-1513940376689</coId>
      <text>编译时，会将相关联的两个class类一起编译（不管在不在一个java源文件中）</text>
      <inline-styles/>
      <styles/>
    </list-item>
    <list-item level="1" list-id="5660-1513940416285">
      <coId>9224-1513940376689</coId>
      <text>将printArray方法优化：加上static，不用new对象就直接可以调用，方便使用。</text>
      <inline-styles/>
      <styles/>
    </list-item>
    <list-item level="1" list-id="5660-1513940416285">
      <coId>4369-1513940376689</coId>
      <text>static修饰的printArray方法依然可以被人使用，直接在ArrayTools类中，定义私有的构造方法，这样就没法new对象了</text>
      <inline-styles/>
      <styles/>
    </list-item>
    <para>
      <coId>3664-1513940376689</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9339-1513940303292</coId>
      <text>出现的问题：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>4839-1513940450387</coId>
      <text>制作帮助文档出错</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>2172-1513940452378</coId>
      <text>找不到可以文档化的公共或受保护的类</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2575-1513940452378</coId>
      <text>权限不够，使用public修饰class类</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>7759-1513940452378</coId>
      <text>演示ArrayTools文档的使用</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9684-1513940502054</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>9855-1513940497181</coId>
      <text>11.2 如何使用帮助文档</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>13</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>13</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>7592-1513940505018</coId>
      <text>找到CHM文档并打开</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>0053-1513940511635</coId>
      <text>点击[显示]，找到[索引]，出现输入框</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9648-1513940511635</coId>
      <text>你应该知道你找谁?举例：Scanner</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1014-1513940511635</coId>
      <text>看这个类的结构(需不需要导包)</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>6329-1513940511635</coId>
      <text>成员变量 字段</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>8870-1513940511635</coId>
      <text>构造方法 构造方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1016-1513940511635</coId>
      <text>成员方法 方法</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5945-1513940511635</coId>
      <text>看这个类的说明</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>5440-1513940511635</coId>
      <text>看构造方法的说明</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>2924-1513940511635</coId>
      <text>看成员方法的说明</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3735-1513940511635</coId>
      <text>然后使用</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1185-1513940511635</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>8418-1513940544609</coId>
      <text>11.3 根据文档编辑一个Math.random</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>24</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>24</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>9800-1514008932984</coId>
      <text>公式：(数据类型)(最小值+Math.random()*(最大值-最小值+1))</text>
      <inline-styles>
        <color>
          <from>0</from>
          <to>41</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>3767-1513926721273</coId>
      <text>Math类概述</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>2319-1513940563175</coId>
      <text>Math包含用于执行基本数学运算的方法</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7867-1513940563175</coId>
      <text>Math类特点</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7560-1513940563175</coId>
      <text>没有构造方法，因为成员都是静态的</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6698-1513940563175</coId>
      <text>Math类讲解一个方法</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>1180-1513940563175</coId>
      <text>获取随机数:public static double random()</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>9175-1513940563175</coId>
      <text>获取1-100之间的随机数</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>5050-1513940563175</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>2473-1513926689131</coId>
      <text>Math.Random() :随机返回一个0&lt;=x&lt;100的double值</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4053-1513926631685</coId>
      <text>//随机1到100的随机值</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>13</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>1326-1513926611622</coId>
      <text>(int)(Math.Random()+100)+1</text>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <para>
      <coId>3087-1513927509501</coId>
      <text/>
      <inline-styles/>
      <styles>
        <indent>1</indent>
      </styles>
    </para>
    <heading compat="true" level="1">
      <coId>1559-1513927509784</coId>
      <text>12 代码块</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>7</to>
          <value>28</value>
        </font-size>
      </inline-styles>
      <styles>
        <align>center</align>
      </styles>
    </heading>
    <para>
      <coId>1114-1513940574489</coId>
      <text>在Java中，使用{}括起来的代码被称为代码块，根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。</text>
      <inline-styles>
        <bold>
          <from>40</from>
          <to>63</to>
          <value>true</value>
        </bold>
        <color>
          <from>40</from>
          <to>63</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6477-1513940576883</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>3169-1513927526159</coId>
      <text>12.1 局部代码块</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5854-1513940620657</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7064-1513940589978</coId>
      <text>解释：在方法中出现；限定变量生命周期，及早释放，提高内存利用率</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1870-1513940616501</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9717-1513940593185</coId>
      <text>出现位置：在方法中出现</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7060-1513940607165</coId>
      <text>好处：限定变量生命周期，及早释放，提高内存利用率</text>
      <inline-styles>
        <bold>
          <from>1</from>
          <to>4</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>3776-1513940607165</coId>
      <text>注意事项：</text>
      <inline-styles>
        <bold>
          <from>1</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>9037-1513940647101</coId>
      <text>1. 执行的顺序是按照代码顺序执行的</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <para>
      <coId>8060-1513940613729</coId>
      <text>2. 不同的同级代码块直接的变量相互不影响，变量名可以相同</text>
      <inline-styles/>
      <styles>
        <text-indent>2</text-indent>
      </styles>
    </para>
    <code>
      <coId>7610-1542285946472</coId>
      <text>class CodeDemo{     public static void main(String[] args){           //局部代码块：限定变量生命周期，及早释放，提高内存利用率         {             int x = 10;                System.out.println(x);         }         //局部代码块：限定变量生命周期，及早释放，提高内存利用率         {             int x = 20;             System.out.println(x);         }     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
        <bold>
          <from>20</from>
          <to>26</to>
          <value>true</value>
        </bold>
        <bold>
          <from>27</from>
          <to>33</to>
          <value>true</value>
        </bold>
        <bold>
          <from>34</from>
          <to>38</to>
          <value>true</value>
        </bold>
        <bold>
          <from>122</from>
          <to>125</to>
          <value>true</value>
        </bold>
        <bold>
          <from>156</from>
          <to>159</to>
          <value>true</value>
        </bold>
        <bold>
          <from>242</from>
          <to>245</to>
          <value>true</value>
        </bold>
        <bold>
          <from>273</from>
          <to>276</to>
          <value>true</value>
        </bold>
        <italic>
          <from>156</from>
          <to>159</to>
          <value>true</value>
        </italic>
        <italic>
          <from>273</from>
          <to>276</to>
          <value>true</value>
        </italic>
        <underline>
          <from>0</from>
          <to>1</to>
          <value>true</value>
        </underline>
        <font-size>
          <from>0</from>
          <to>15</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>16</from>
          <to>59</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>60</from>
          <to>99</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>100</from>
          <to>109</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>110</from>
          <to>136</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>137</from>
          <to>171</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>172</from>
          <to>181</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>182</from>
          <to>219</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>220</from>
          <to>229</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>230</from>
          <to>253</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>254</from>
          <to>288</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>289</from>
          <to>298</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>299</from>
          <to>304</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>305</from>
          <to>306</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>5</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>5</from>
          <to>15</to>
          <value>#393939</value>
        </color>
        <color>
          <from>16</from>
          <to>20</to>
          <value>#393939</value>
        </color>
        <color>
          <from>20</from>
          <to>26</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>26</from>
          <to>27</to>
          <value>#393939</value>
        </color>
        <color>
          <from>27</from>
          <to>33</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>33</from>
          <to>34</to>
          <value>#393939</value>
        </color>
        <color>
          <from>34</from>
          <to>38</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>38</from>
          <to>53</to>
          <value>#393939</value>
        </color>
        <color>
          <from>53</from>
          <to>57</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>57</from>
          <to>59</to>
          <value>#393939</value>
        </color>
        <color>
          <from>60</from>
          <to>70</to>
          <value>#393939</value>
        </color>
        <color>
          <from>70</from>
          <to>99</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>100</from>
          <to>109</to>
          <value>#393939</value>
        </color>
        <color>
          <from>110</from>
          <to>122</to>
          <value>#393939</value>
        </color>
        <color>
          <from>122</from>
          <to>125</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>125</from>
          <to>126</to>
          <value>#393939</value>
        </color>
        <color>
          <from>126</from>
          <to>127</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>127</from>
          <to>136</to>
          <value>#393939</value>
        </color>
        <color>
          <from>137</from>
          <to>156</to>
          <value>#393939</value>
        </color>
        <color>
          <from>156</from>
          <to>159</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>159</from>
          <to>168</to>
          <value>#393939</value>
        </color>
        <color>
          <from>168</from>
          <to>169</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>169</from>
          <to>171</to>
          <value>#393939</value>
        </color>
        <color>
          <from>172</from>
          <to>181</to>
          <value>#393939</value>
        </color>
        <color>
          <from>182</from>
          <to>190</to>
          <value>#393939</value>
        </color>
        <color>
          <from>190</from>
          <to>219</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>220</from>
          <to>229</to>
          <value>#393939</value>
        </color>
        <color>
          <from>230</from>
          <to>242</to>
          <value>#393939</value>
        </color>
        <color>
          <from>242</from>
          <to>245</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>245</from>
          <to>246</to>
          <value>#393939</value>
        </color>
        <color>
          <from>246</from>
          <to>247</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>247</from>
          <to>253</to>
          <value>#393939</value>
        </color>
        <color>
          <from>254</from>
          <to>273</to>
          <value>#393939</value>
        </color>
        <color>
          <from>273</from>
          <to>276</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>276</from>
          <to>285</to>
          <value>#393939</value>
        </color>
        <color>
          <from>285</from>
          <to>286</to>
          <value>#6a3e3e</value>
        </color>
        <color>
          <from>286</from>
          <to>288</to>
          <value>#393939</value>
        </color>
        <color>
          <from>289</from>
          <to>298</to>
          <value>#393939</value>
        </color>
        <color>
          <from>299</from>
          <to>304</to>
          <value>#393939</value>
        </color>
        <color>
          <from>305</from>
          <to>306</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>5915-1542285953095</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>7012-1513940749738</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>8034-1513912614147</coId>
      <text>12.2 构造代码块</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>7068-1513940826404</coId>
      <text>在类中方法外出现；多个构造方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行</text>
      <inline-styles>
        <color>
          <from>27</from>
          <to>47</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9073-1513940829044</coId>
      <text>出现位置：在类中方法外出现</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6194-1513940847907</coId>
      <text>使用场景：当多个构造方法中有相同的代码时，可以抽取到构造代码块中。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>2075-1513940847907</coId>
      <text>调用时机：每次调用构造方法都执行，并且在构造方法前执行</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5819-1513940847907</coId>
      <text>注意事项：</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>5821-1513940847907</coId>
      <text>1：构造代码块比构造方法先执行，跟他们的位置无关</text>
      <inline-styles>
        <color>
          <from>4</from>
          <to>26</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>7920-1513940847907</coId>
      <text>2：多个构造代码块，它们的执行顺序就是代码的顺序</text>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>3533-1513940847907</coId>
      <text>3：只有调用构造方法的时候，才会调用构造代码块，也就是只有new该类对象的时候，才调用</text>
      <inline-styles/>
      <styles/>
    </para>
    <code>
      <coId>9397-1513928051793</coId>
      <text>public class Code{ // 写在构造方法之前的构造代码块 { System.out.println("我是写在构造方法之前的构造代码块"); } // 构造方法 public Code(){ System.out.println("我是构造方法"); } // 写在构造方法之后的构造代码块 { System.out.println("我是写在构造方法之后的构造代码块"); } }</text>
      <inline-styles/>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>5368-1542285968633</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <para>
      <coId>9185-1513940988507</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>5077-1513928146941</coId>
      <text>12.3 静态代码块</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>5373-1513929213825</coId>
      <text>一生只出现一次，只执行一次</text>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4624-1513941052587</coId>
      <text>出现位置：在类中方法外出现，但是它是使用static修饰的。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>5</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>1935-1513941052587</coId>
      <text>使用场景：需要给类的静态成员初始化时使用。</text>
      <inline-styles>
        <bold>
          <from>1</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <para>
      <coId>4920-1513941052587</coId>
      <text>调用时机：在类加载的时候就执行，并且只执行一次。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles/>
    </para>
    <code>
      <coId>9982-1542285975813</coId>
      <text>public class Code{ //静态代码块的加载时机：类加载的时候，类只会加载一次，所以静态代码块也只会加载一次。     static{         System.out.println("我是Code静态代码块");     }     // 写在构造方法之前的构造代码块     {         System.out.println("我是写在构造方法之前的构造代码块");     }     // 构造方法     public Code(){         System.out.println("我是构造方法");     } }</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>6</to>
          <value>true</value>
        </bold>
        <bold>
          <from>7</from>
          <to>12</to>
          <value>true</value>
        </bold>
        <bold>
          <from>67</from>
          <to>73</to>
          <value>true</value>
        </bold>
        <bold>
          <from>90</from>
          <to>93</to>
          <value>true</value>
        </bold>
        <bold>
          <from>167</from>
          <to>170</to>
          <value>true</value>
        </bold>
        <bold>
          <from>222</from>
          <to>228</to>
          <value>true</value>
        </bold>
        <bold>
          <from>252</from>
          <to>255</to>
          <value>true</value>
        </bold>
        <italic>
          <from>90</from>
          <to>93</to>
          <value>true</value>
        </italic>
        <italic>
          <from>167</from>
          <to>170</to>
          <value>true</value>
        </italic>
        <italic>
          <from>252</from>
          <to>255</to>
          <value>true</value>
        </italic>
        <font-size>
          <from>0</from>
          <to>18</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>19</from>
          <to>62</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>63</from>
          <to>74</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>75</from>
          <to>117</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>118</from>
          <to>123</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>124</from>
          <to>145</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>146</from>
          <to>151</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>152</from>
          <to>199</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>200</from>
          <to>205</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>206</from>
          <to>217</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>218</from>
          <to>236</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>237</from>
          <to>274</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>275</from>
          <to>280</to>
          <value>13</value>
        </font-size>
        <font-size>
          <from>281</from>
          <to>282</to>
          <value>13</value>
        </font-size>
        <color>
          <from>0</from>
          <to>6</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>6</from>
          <to>7</to>
          <value>#393939</value>
        </color>
        <color>
          <from>7</from>
          <to>12</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>12</from>
          <to>18</to>
          <value>#393939</value>
        </color>
        <color>
          <from>19</from>
          <to>62</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>63</from>
          <to>67</to>
          <value>#393939</value>
        </color>
        <color>
          <from>67</from>
          <to>73</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>73</from>
          <to>74</to>
          <value>#393939</value>
        </color>
        <color>
          <from>75</from>
          <to>90</to>
          <value>#393939</value>
        </color>
        <color>
          <from>90</from>
          <to>93</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>93</from>
          <to>102</to>
          <value>#393939</value>
        </color>
        <color>
          <from>102</from>
          <to>115</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>115</from>
          <to>117</to>
          <value>#393939</value>
        </color>
        <color>
          <from>118</from>
          <to>123</to>
          <value>#393939</value>
        </color>
        <color>
          <from>124</from>
          <to>128</to>
          <value>#393939</value>
        </color>
        <color>
          <from>128</from>
          <to>145</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>146</from>
          <to>151</to>
          <value>#393939</value>
        </color>
        <color>
          <from>152</from>
          <to>167</to>
          <value>#393939</value>
        </color>
        <color>
          <from>167</from>
          <to>170</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>170</from>
          <to>179</to>
          <value>#393939</value>
        </color>
        <color>
          <from>179</from>
          <to>197</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>197</from>
          <to>199</to>
          <value>#393939</value>
        </color>
        <color>
          <from>200</from>
          <to>205</to>
          <value>#393939</value>
        </color>
        <color>
          <from>206</from>
          <to>210</to>
          <value>#393939</value>
        </color>
        <color>
          <from>210</from>
          <to>217</to>
          <value>#3f7f5f</value>
        </color>
        <color>
          <from>218</from>
          <to>222</to>
          <value>#393939</value>
        </color>
        <color>
          <from>222</from>
          <to>228</to>
          <value>#7f0055</value>
        </color>
        <color>
          <from>228</from>
          <to>236</to>
          <value>#393939</value>
        </color>
        <color>
          <from>237</from>
          <to>252</to>
          <value>#393939</value>
        </color>
        <color>
          <from>252</from>
          <to>255</to>
          <value>#0000c0</value>
        </color>
        <color>
          <from>255</from>
          <to>264</to>
          <value>#393939</value>
        </color>
        <color>
          <from>264</from>
          <to>272</to>
          <value>#2a00ff</value>
        </color>
        <color>
          <from>272</from>
          <to>274</to>
          <value>#393939</value>
        </color>
        <color>
          <from>275</from>
          <to>280</to>
          <value>#393939</value>
        </color>
        <color>
          <from>281</from>
          <to>282</to>
          <value>#393939</value>
        </color>
      </inline-styles>
      <styles/>
      <language>javascript</language>
      <theme>default</theme>
    </code>
    <para>
      <coId>2484-1542285980069</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </para>
    <heading compat="true" level="2">
      <coId>7192-1513928214892</coId>
      <text/>
      <inline-styles/>
      <styles/>
    </heading>
    <heading compat="true" level="2">
      <coId>1457-1513928151940</coId>
      <text>12.4 类执行顺序</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>10</to>
          <value>true</value>
        </bold>
        <font-size>
          <from>0</from>
          <to>10</to>
          <value>20</value>
        </font-size>
      </inline-styles>
      <styles/>
    </heading>
    <para>
      <coId>6012-1513928159640</coId>
      <text>类的静态代码块-&gt;构造代码块(mian方法不调用)-&gt;该类的main方法-&gt;</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>7</to>
          <value>true</value>
        </bold>
        <bold>
          <from>25</from>
          <to>38</to>
          <value>true</value>
        </bold>
        <strike>
          <from>8</from>
          <to>25</to>
          <value>true</value>
        </strike>
        <color>
          <from>7</from>
          <to>25</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>9127-1513928635037</coId>
      <text>调用类的静态代码块-&gt;(new对象后:-&gt;构造代码块-&gt;构造方法)</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>33</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>6632-1513928966230</coId>
      <text>-&gt;(又一次new该对象后:-&gt;构造代码块-&gt;构造方法)</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>32</to>
          <value>true</value>
        </bold>
      </inline-styles>
      <styles>
        <text-indent>5</text-indent>
      </styles>
    </para>
    <para>
      <coId>3839-1513929069553</coId>
      <text>因为：构造代码块和构造方法只有在new对象的时候才调用，所以main所属的类不调用。</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>42</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>42</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>4330-1568823492449</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <para>
      <coId>7047-1568823493052</coId>
      <text/>
      <inline-styles/>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
    <image>
      <coId>4490-1568823137073</coId>
      <source>https://note.youdao.com/yws/res/83762/7E05E7C520F7489B9DD31F1052340AEC</source>
      <text/>
      <styles>
        <width>419</width>
        <height>430</height>
      </styles>
    </image>
    <para>
      <coId>1760-1568823137073</coId>
      <text>同一个级别内 是按照代码顺序从前往后执行</text>
      <inline-styles>
        <bold>
          <from>0</from>
          <to>20</to>
          <value>true</value>
        </bold>
        <color>
          <from>0</from>
          <to>20</to>
          <value>#df402a</value>
        </color>
      </inline-styles>
      <styles>
        <text-indent>1</text-indent>
      </styles>
    </para>
  </body>
</note>
